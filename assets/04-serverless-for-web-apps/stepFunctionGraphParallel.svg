<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "https://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" id="sfn-svg" class="sfn-workflow-graph" width="556" height="490">
    
    
<g transform="translate(12,19.625)"><g class="nodes"><g class="node-container" transform="translate(265.65625,18.25)"><g class="node anchor"><circle class="shape" x="-15.875" y="-8.25" r="25.875"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Start</tspan></text></g></g><g class="node-container" transform="translate(265.65625,435.875)"><g class="node anchor"><circle class="shape" x="-12.1875" y="-8.25" r="22.1875"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">End</tspan></text></g></g><g class="node-container" transform="translate(265.65625,79.75)"><g class="node state Task Succeeded"><rect class="shape" rx="5" ry="5" x="-59.6875" y="-18.25" width="119.375" height="36.5"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">prepareExercise</tspan></text></g></g><g class="node-container" transform="translate(265.65625,196.28125)"><g class="node state Parallel Container Succeeded" transform="translate(-265.65625,-73.28125)"><rect class="shape" rx="29.3125" ry="29.3125" x="0" y="0" width="531.3125" height="146.5625"/><g class="branches" transform="translate(20,40)"><g class="branch" transform="translate(0,0)"><g class="nodes"><g class="node-container" transform="translate(62.25,18.25)"><g class="node state Task Succeeded"><rect class="shape" rx="5" ry="5" x="-62.25" y="-18.25" width="124.5" height="36.5"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">extractMetadata</tspan></text></g></g></g><g class="edges"/></g><g class="branch" transform="translate(144.5,0)"><g class="nodes"><g class="node-container" transform="translate(91,38.28125)"><g class="node state Map Container Succeeded" transform="translate(-83.5,-38.28125)"><rect class="shape" rx="5" ry="5" x="-10" y="-10" width="165" height="74.5625"/><rect class="shape" rx="5" ry="5" x="-5" y="-5" width="166" height="75.5625"/><rect class="shape" rx="5" ry="5" x="0" y="0" width="167" height="76.5625"/><g class="branches" transform="translate(20,20)"><g class="branch" transform="translate(0,0)"><g class="nodes"><g class="node-container" transform="translate(63.5,18.28125)"><g class="node state Task Succeeded"><rect class="shape" rx="5" ry="5" x="-63.5" y="-18.28125" width="127" height="36.5625"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">processTexToSvg</tspan></text></g></g></g><g class="edges"/></g></g><path class="path" marker-end="url(#arrowhead91)" d="M83.5,0L83.5,1.6666666666666665C83.5,3.333333333333333,83.5,6.666666666666666,83.5,8.333333333333332C83.5,10,83.5,10,83.5,11.666666666666664C83.5,13.333333333333332,83.5,16.666666666666664,83.5,18.333333333333332L83.5,20" style="fill: none;"/></g></g></g><g class="edges"/></g><g class="branch" transform="translate(341.5,0)"><g class="nodes"><g class="node-container" transform="translate(74.90625,18.25)"><g class="node state Task Succeeded"><rect class="shape" rx="5" ry="5" x="-74.90625" y="-18.25" width="149.8125" height="36.5"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">processTexToSpeech</tspan></text></g></g></g><g class="edges"/></g></g><path class="path" marker-end="url(#arrowhead92)" d="M265.65625,0L265.65625,3.333333333333333C265.65625,6.666666666666666,265.65625,13.333333333333332,235.08854166666666,16.666666666666664C204.52083333333331,20,143.38541666666666,20,112.81770833333333,23.33333333333333C82.25,26.666666666666664,82.25,33.33333333333333,82.24999999999999,36.666666666666664L82.25,40" style="fill: none;"/><path class="path" marker-end="url(#arrowhead93)" d="M265.65625,0L265.65625,3.333333333333333C265.65625,6.666666666666666,265.65625,13.333333333333332,263.96354166666663,16.666666666666664C262.2708333333333,20,258.88541666666663,20,257.1927083333333,23.33333333333333C255.49999999999997,26.666666666666664,255.49999999999997,33.33333333333333,255.49999999999994,36.666666666666664L255.5,40" style="fill: none;"/><path class="path" marker-end="url(#arrowhead94)" d="M265.65625,0L265.65625,3.333333333333333C265.65625,6.666666666666666,265.65625,13.333333333333332,294.1145833333333,16.666666666666664C322.57291666666663,20,379.4895833333333,20,407.9479166666667,23.33333333333333C436.40625,26.666666666666664,436.40625,33.33333333333333,436.40625,36.666666666666664L436.40625,40" style="fill: none;"/></g></g><g class="node-container" transform="translate(265.65625,312.8125)"><g class="node state Pass Succeeded"><rect class="shape" rx="5" ry="5" x="-54.90625" y="-18.25" width="109.8125" height="36.5"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">formatOutput</tspan></text></g></g><g class="node-container" transform="translate(265.65625,374.34375)"><g class="node state Task Succeeded"><rect class="shape" rx="5" ry="5" x="-47.5625" y="-18.28125" width="95.125" height="36.5625"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">notifyClient</tspan></text></g></g></g><g class="edges"><g class="edge"><path class="path" marker-end="url(#arrowhead95)" d="M265.65625,98L265.65625,100.08333333333331C265.65625,102.16666666666666,265.65625,106.33333333333331,265.65625,110.49999999999999C265.65625,114.66666666666666,265.65625,118.83333333333333,265.65625,120.91666666666666L265.65625,123" style="fill: none;"/><defs><marker id="arrowhead95" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g><g class="edge"><path class="path" marker-end="url(#arrowhead96)" d="M265.65625,44.125L265.65625,44.93749999999999C265.65625,45.75,265.65625,47.375,265.65625,50.27083333333333C265.65625,53.166666666666664,265.65625,57.33333333333333,265.65625,59.416666666666664L265.65625,61.5" style="fill: none;"/><defs><marker id="arrowhead96" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g><g class="edge"><path class="path" marker-end="url(#arrowhead97)" d="M265.65625,269.5625L265.65625,271.6458333333333C265.65625,273.72916666666663,265.65625,277.8958333333333,265.65625,282.0625C265.65625,286.22916666666663,265.65625,290.3958333333333,265.65625,292.47916666666663L265.65625,294.5625" style="fill: none;"/><defs><marker id="arrowhead97" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g><g class="edge"><path class="path" marker-end="url(#arrowhead98)" d="M265.65625,331.0625L265.65625,333.1458333333333C265.65625,335.22916666666663,265.65625,339.3958333333333,265.65625,343.5625C265.65625,347.72916666666663,265.65625,351.8958333333333,265.65625,353.9791666666667L265.65625,356.0625" style="fill: none;"/><defs><marker id="arrowhead98" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g><g class="edge"><path class="path" marker-end="url(#arrowhead99)" d="M265.65625,392.625L265.65625,394.7083333333333C265.65625,396.79166666666663,265.65625,400.9583333333333,265.65625,404.46875C265.65625,407.97916666666663,265.65625,410.83333333333326,265.65625,412.26041666666663L265.65625,413.6875" style="fill: none;"/><defs><marker id="arrowhead99" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g></g></g><style xmlns="http://www.w3.org/1999/xhtml">.node &gt; .shape {stroke: #555555;stroke-width: 0.6px;fill: #FFFFFF;} path {stroke: #555;background-color: #555;stroke-width: 1px;} .node.state.NotYetStarted &gt; .shape,.node.state.Container &gt; .shape {stroke-dasharray: 5 2;} .node.state.Failed &gt; .shape,rect.legend.Failed {fill: #DE322F;} .node.state.CaughtError &gt; .shape,rect.legend.CaughtError {fill: #FFA500;} .node.state.Succeeded &gt; .shape,rect.legend.Succeeded {fill: #2BD62E;} .node.state.InProgress &gt; .shape,rect.legend.InProgress {fill: #53c9ed;} .node.state.Cancelled &gt; .shape,rect.legend.Cancelled {fill: #dddddd;} .node.anchor &gt; .shape {fill: #FFDA75;} .node.state.hovered:not(.selected):not(.NotYetStarted) &gt; .shape,.node.selected &gt; .shape {stroke: #555555;stroke-width: 2px;} .node.state.Container.Failed &gt; .shape {fill: #EE9592;} .node.state.Container.CaughtError &gt; .shape {fill: #FFD27F;} .node.state.Container.Succeeded &gt; .shape {fill: #91EA9A;} .node.state.Container.InProgress &gt; .shape {fill :#A9E4F7;} .node.state.Container.Cancelled &gt; .shape {fill: #EEEEEE;} marker {fill: #555555;} .node.anchor,.node.state.NotYetStarted {cursor: default;} .node.state {cursor: pointer;} tspan .label {font-weight: normal;font-size: 12px;text-shadow: none;} </style></svg>